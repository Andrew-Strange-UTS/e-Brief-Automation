name: Fetch All Mailman Listserv Tasks

on:
  workflow_dispatch:

jobs:
  fetch-task-add-user-cass:
    name: Fetch Add user to CASS ebrief. Tasks
    runs-on: ubuntu-latest
    outputs:
      task_numbers: ${{ steps.extract.outputs.task_list }}
    steps:
      - name: Query tasks with short_description "Add user to CASS ebrief."
        id: extract
        env:
          SN_USERNAME: ${{ secrets.SERVICECONNECTUSERNAME }}
          SN_PASSWORD: ${{ secrets.SERVICECONNECTPASSWORD }}
        run: |
          QUERY="active=true^state=1^short_description=Add user to CASS ebrief."
          ENCODED_QUERY=$(python3 -c "import urllib.parse; print(urllib.parse.quote('${QUERY}'))")
          URL="https://utsdevesm.service-now.com/api/now/table/sc_task?sysparm_query=${ENCODED_QUERY}&sysparm_fields=number,short_description"
          RESPONSE=$(curl -s -u "$SN_USERNAME:$SN_PASSWORD" -H "Accept: application/json" "$URL")
          echo "$RESPONSE" | jq -r '.result[] | "\(.number) - \(.short_description)"'
          TASK_LIST=$(echo "$RESPONSE" | jq -r '[.result[].number] | @json')
          echo "task_list=$TASK_LIST" >> $GITHUB_OUTPUT

  fetch-task-remove-user-cass:
    name: Fetch Remove user to CASS ebrief. Tasks
    runs-on: ubuntu-latest
    outputs:
      task_numbers: ${{ steps.extract.outputs.task_list }}
    steps:
      - name: Query tasks with short_description "Remove user to CASS ebrief."
        id: extract
        env:
          SN_USERNAME: ${{ secrets.SERVICECONNECTUSERNAME }}
          SN_PASSWORD: ${{ secrets.SERVICECONNECTPASSWORD }}
        run: |
          QUERY="active=true^state=1^short_description=Remove user to CASS ebrief."
          ENCODED_QUERY=$(python3 -c "import urllib.parse; print(urllib.parse.quote('${QUERY}'))")
          URL="https://utsdevesm.service-now.com/api/now/table/sc_task?sysparm_query=${ENCODED_QUERY}&sysparm_fields=number,short_description"
          RESPONSE=$(curl -s -u "$SN_USERNAME:$SN_PASSWORD" -H "Accept: application/json" "$URL")
          echo "$RESPONSE" | jq -r '.result[] | "\(.number) - \(.short_description)"'
          TASK_LIST=$(echo "$RESPONSE" | jq -r '[.result[].number] | @json')
          echo "task_list=$TASK_LIST" >> $GITHUB_OUTPUT

  fetch-task-add-user-academic:
    name: Fetch Add user to Academic ebrief Tasks
    runs-on: ubuntu-latest
    outputs:
      task_numbers: ${{ steps.extract.outputs.task_list }}
    steps:
      - name: Query tasks with short_description "Add user to Academic ebrief"
        id: extract
        env:
          SN_USERNAME: ${{ secrets.SERVICECONNECTUSERNAME }}
          SN_PASSWORD: ${{ secrets.SERVICECONNECTPASSWORD }}
        run: |
          QUERY="active=true^state=1^short_description=Add user to Academic ebrief"
          ENCODED_QUERY=$(python3 -c "import urllib.parse; print(urllib.parse.quote('${QUERY}'))")
          URL="https://utsdevesm.service-now.com/api/now/table/sc_task?sysparm_query=${ENCODED_QUERY}&sysparm_fields=number,short_description"
          RESPONSE=$(curl -s -u "$SN_USERNAME:$SN_PASSWORD" -H "Accept: application/json" "$URL")
          echo "$RESPONSE" | jq -r '.result[] | "\(.number) - \(.short_description)"'
          TASK_LIST=$(echo "$RESPONSE" | jq -r '[.result[].number] | @json')
          echo "task_list=$TASK_LIST" >> $GITHUB_OUTPUT

  fetch-task-remove-user-academic:
    name: Fetch Remove user Academic ebrief Tasks
    runs-on: ubuntu-latest
    outputs:
      task_numbers: ${{ steps.extract.outputs.task_list }}
    steps:
      - name: Query tasks with short_description "Remove user Academic ebrief"
        id: extract
        env:
          SN_USERNAME: ${{ secrets.SERVICECONNECTUSERNAME }}
          SN_PASSWORD: ${{ secrets.SERVICECONNECTPASSWORD }}
        run: |
          QUERY="active=true^state=1^short_description=Remove user Academic ebrief"
          ENCODED_QUERY=$(python3 -c "import urllib.parse; print(urllib.parse.quote('${QUERY}'))")
          URL="https://utsdevesm.service-now.com/api/now/table/sc_task?sysparm_query=${ENCODED_QUERY}&sysparm_fields=number,short_description"
          RESPONSE=$(curl -s -u "$SN_USERNAME:$SN_PASSWORD" -H "Accept: application/json" "$URL")
          echo "$RESPONSE" | jq -r '.result[] | "\(.number) - \(.short_description)"'
          TASK_LIST=$(echo "$RESPONSE" | jq -r '[.result[].number] | @json')
          echo "task_list=$TASK_LIST" >> $GITHUB_OUTPUT

  fetch-task-add-user-non-academic:
    name: Fetch Add user to non-Academic ebrief Tasks
    runs-on: ubuntu-latest
    outputs:
      task_numbers: ${{ steps.extract.outputs.task_list }}
    steps:
      - name: Query tasks with short_description "Add user to non-Academic ebrief"
        id: extract
        env:
          SN_USERNAME: ${{ secrets.SERVICECONNECTUSERNAME }}
          SN_PASSWORD: ${{ secrets.SERVICECONNECTPASSWORD }}
        run: |
          QUERY="active=true^state=1^short_description=Add user to non-Academic ebrief"
          ENCODED_QUERY=$(python3 -c "import urllib.parse; print(urllib.parse.quote('${QUERY}'))")
          URL="https://utsdevesm.service-now.com/api/now/table/sc_task?sysparm_query=${ENCODED_QUERY}&sysparm_fields=number,short_description"
          RESPONSE=$(curl -s -u "$SN_USERNAME:$SN_PASSWORD" -H "Accept: application/json" "$URL")
          echo "$RESPONSE" | jq -r '.result[] | "\(.number) - \(.short_description)"'
          TASK_LIST=$(echo "$RESPONSE" | jq -r '[.result[].number] | @json')
          echo "task_list=$TASK_LIST" >> $GITHUB_OUTPUT

  fetch-task-remove-user-non-academic:
    name: Fetch Remove user from non-Academic ebrief Tasks
    runs-on: ubuntu-latest
    outputs:
      task_numbers: ${{ steps.extract.outputs.task_list }}
    steps:
      - name: Query tasks with short_description "Remove user from non-Academic ebrief"
        id: extract
        env:
          SN_USERNAME: ${{ secrets.SERVICECONNECTUSERNAME }}
          SN_PASSWORD: ${{ secrets.SERVICECONNECTPASSWORD }}
        run: |
          QUERY="active=true^state=1^short_description=Remove user from non-Academic ebrief"
          ENCODED_QUERY=$(python3 -c "import urllib.parse; print(urllib.parse.quote('${QUERY}'))")
          URL="https://utsdevesm.service-now.com/api/now/table/sc_task?sysparm_query=${ENCODED_QUERY}&sysparm_fields=number,short_description"
          RESPONSE=$(curl -s -u "$SN_USERNAME:$SN_PASSWORD" -H "Accept: application/json" "$URL")
          echo "$RESPONSE" | jq -r '.result[] | "\(.number) - \(.short_description)"'
          TASK_LIST=$(echo "$RESPONSE" | jq -r '[.result[].number] | @json')
          echo "task_list=$TASK_LIST" >> $GITHUB_OUTPUT
